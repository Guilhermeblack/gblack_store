# Generated by Django 3.0.8 on 2021-02-12 20:21

import cloudinary.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('loja', models.BooleanField(default=False)),
                ('nome', models.CharField(max_length=50, unique=True)),
                ('senha', models.CharField(max_length=50, null=True)),
                ('telefone', models.CharField(max_length=20, null=True)),
                ('email', models.CharField(max_length=35, null=True)),
                ('cpf', models.CharField(max_length=16, null=True, unique=True)),
                ('data', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'permissions': [('adicionar_prod', 'Adicionar produto'), ('pagar_prod', 'Pagar produtos'), ('uai', 'te4s')],
            },
        ),
        migrations.CreateModel(
            name='Carrinho',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor', models.FloatField(blank=True, default=0.0)),
                ('data', models.DateTimeField(auto_now_add=True)),
                ('cliente_cli', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Cliente', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='logform',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('senha', models.CharField(max_length=80)),
                ('nome', models.CharField(max_length=80)),
            ],
        ),
        migrations.CreateModel(
            name='Produto',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=50)),
                ('descricao', models.TextField(max_length=255)),
                ('preco', models.FloatField(default=0.0)),
                ('img_prod', cloudinary.models.CloudinaryField(max_length=255)),
                ('tipo', models.CharField(choices=[('R', 'Relogio'), ('A', 'Acessorio'), ('v', 'Vesturaio')], max_length=1)),
                ('data', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Venda',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('quantidade', models.IntegerField(default=1)),
                ('observacao', models.TextField(blank=True, default='Sem Observações.', max_length=170)),
                ('status', models.CharField(choices=[('P', 'Pedido realizado'), ('F', 'Fazendo'), ('S', 'Saiu para entrega'), ('E', 'Foi entregue'), ('C', 'Cancelado')], default='P', max_length=1)),
                ('status_pago', models.CharField(choices=[('P', 'Pago'), ('R', 'Resto'), ('N', 'Não pago')], default='N', max_length=1)),
                ('valor', models.FloatField(blank=True, default=0.0)),
                ('data', models.DateTimeField(auto_now_add=True)),
                ('carrinho', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='carrinho_cli', to='loja.Carrinho')),
                ('produto_cli', models.ManyToManyField(related_name='produto_cli', to='loja.Produto')),
            ],
        ),
        migrations.CreateModel(
            name='Tot_ped',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.IntegerField(default=1)),
                ('carrinho', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='carrinho', to='loja.Carrinho')),
                ('produto_carrinho', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prod_carrinho', to='loja.Produto')),
            ],
        ),
        migrations.CreateModel(
            name='Pagamentos',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('formapg', models.CharField(choices=[('C', 'Cartão'), ('P', 'Pix'), ('D', 'Dinheiro')], default='D', max_length=1)),
                ('status', models.CharField(choices=[('C', 'Completo'), ('P', 'Processo'), ('R', 'Recusado')], default='R', max_length=1)),
                ('valor', models.FloatField(blank=True, default=0.0)),
                ('data', models.DateTimeField(auto_now_add=True)),
                ('carrinho_ped', models.ManyToManyField(blank=True, related_name='carribgo_ped', to='loja.Carrinho')),
            ],
        ),
        migrations.AddField(
            model_name='carrinho',
            name='produto_cli',
            field=models.ManyToManyField(related_name='produto', to='loja.Produto'),
        ),
    ]
